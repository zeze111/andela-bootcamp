{"version":3,"sources":["queries.js"],"names":["global","recipes","id","title","details","upvotes","reviews","Values","request","response","query","sort","i","recipe","length","status","json","message","Recipessss","Recipes","catch","res","error","body","push","parseInt","params","recipeId","rev","review","Reviews","splice"],"mappings":"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","file":"queries.js","sourceRoot":"C:/Users/Osaze/Desktop/andela-bootcamp27/server/routes","sourcesContent":["\r\nglobal.recipes = [\r\n  { id: 1, title: 'Chicken Speingrolls', details: 'wash chicken, roll in dough and fry', upvotes: 20 },\r\n  { id: 2, title: 'Jollof Rice', details: 'wash rice, boil tomatoes with spice, mix together', upvotes: 10 },\r\n  { id: 3, title: 'Baked Alaska', details: 'bake meringue, fill the inside, torch meringue', upvotes: 18 },\r\n  { id: 4, title: 'Stir Fry Shrimp', details: 'Fry up vegetables, add shrimps, mix together', upvotes: 7 }];\r\n\r\nglobal.reviews = [];\r\n\r\n\r\n\r\nclass Values {\r\n\r\n\r\n  static getAllRecipes(request, response) {\r\n    if (request.query.sort) {\r\n      for (i = 0; i < global.recipe.length; i++) {\r\n        if (global.recipes[i].upvotes > 10) {\r\n          response.status(200).json({\r\n            status: 'Success', message: response.json({ Recipessss: global.recipes[i] })\r\n          });\r\n        }\r\n        response.status(200).json({\r\n          status: 'Success', message: response.json({ Recipes: global.recipes })\r\n        })\r\n          .catch(error => res.status(404).json(error));\r\n      }\r\n    }\r\n  }\r\n\r\n  static submitRecipe(request, response) {\r\n    if (!request.body.title) {\r\n      response.status(400).json({\r\n        status: 'Unsuccessful', message: 'Missing data input'\r\n      });\r\n    }\r\n    request.body.upvotes = 0;\r\n    global.recipes.push(request.body);\r\n    response.status(201).json({\r\n      status: 'Success', message: 'Submitted Recipe'\r\n    })\r\n      .catch(error => res.status(404).json(error));\r\n  }\r\n\r\n  static updateRecipe(request, response) {\r\n    for (let i = 0; i < global.recipes.length; i++) {\r\n      if (global.recipes[i].id === parseInt(request.params.recipeId, 10)) {\r\n        global.recipes[i].title = request.body.title;\r\n        global.recipes[i].details = request.body.details;\r\n        response.status(200).json({\r\n          status: 'Success', message: 'Updated Recipe'\r\n        });\r\n      }\r\n    }\r\n    response.status(404).json({\r\n      status: 'Unsuccesful', message: 'Recipe Not Found'\r\n    })\r\n      .catch(error => res.status(404).json(error));\r\n  }\r\n\r\n  static reviewRecipe(request, response) {\r\n    for (let i = 0; i < global.recipes.length; i++) {\r\n      if (global.recipes[i].id === parseInt(request.params.recipeId, 10)) {\r\n        let rev = { id: global.recipes[i].id, title: global.recipes[i].title, review: request.body.review };\r\n        global.reviews.push(rev);\r\n        response.status(201).json({\r\n          status: 'Submitted', message: response.json({ Reviews: global.reviews })\r\n        });\r\n      }\r\n    }\r\n    response.status(404).json({\r\n      status: 'Not Found', message: 'Recipe not found'\r\n    })\r\n      .catch(error => res.status(404).json(error));\r\n  }\r\n\r\n  static deleteRecipe(request, response) {\r\n    for (let i = 0; i < global.recipes.length; i++) {\r\n      if (global.recipes[i].id === parseInt(request.params.recipeId, 10)) {\r\n        global.recipes.splice(i, 1);\r\n        response.status(200).json({\r\n          status: 'Success', message: 'Recipe Deleted'\r\n        });\r\n      }\r\n    }\r\n    response.status(404).json({\r\n      status: 'Unsuccessful', message: 'Recipe Not Found'\r\n    })\r\n      .catch(error => res.status(404).json(error));\r\n  }\r\n}\r\n\r\nexport default Values;\r\n\r\n"]}