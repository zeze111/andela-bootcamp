{"version":3,"sources":["apitests.js"],"names":["use","app","require","should","request","describe","it","get","end","err","res","status","equal","body","be","a","done","post","send","id","title","details","not","exist","message","review","put","delete"],"mappings":"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","file":"apitests.js","sourceRoot":"C:/Users/Osaze/Desktop/andela-bootcamp27/server/tests","sourcesContent":["//const chai = require('chai');\n//const chaiHttp = require('chai-http');\n\nimport chai from 'chai';\nimport chaiHttp from 'chai-http';\n\nchai.use(chaiHttp);\nconst app = require('../routes/index.js');\nconst should = chai.should;\nconst request = require('supertest');\n\ndescribe('HTTP API Testing', () => {\n  describe('GET /api/v1/recipes', () => {\n    it('it should return code 200 and recipe list', () => {\n      chai.request(app)\n        .get('/api/v1/recipes')\n        .end((err, res) => {\n          res.status.should.equal(200);\n          res.body.should.be.a('array');\n          res.body.status.should.equal('Success');\n          done();\n        });\n    });\n  });\n  describe('GET /api/v2/recipes?sort=upvotes&order=des', () => {\n    it('it should return code 200 and popular recipe list', () => {\n      chai.request(app)\n        .get('/api/v1/recipes?sort=upvotes&order=des')\n        .end((err, res) => {\n          res.status.should.equal(200);\n          res.body.should.be.a('array');\n          res.body.status.should.equal('Success');\n          done();\n        });\n    });\n  });\n\n  describe('POST /api/v1/recipes', () => {\n    it('it should return code 201 Succesful', () => {\n      chai.request(app)\n        .post('/api/v1/recipes')\n        .send({\n          id: 5,\n          title: 'mango juice',\n          details: 'cut and squeeze juice into a cup'\n        })\n        .end((err, res) => {\n          should.not.exist(err);\n          res.status.should.equal(201);\n          res.body.status.should.equal('Success');\n          res.body.message.should.equal('Submitted Recipe')\n          done();\n        });\n    });\n    it('it should return code 400 Missing data input', () => {\n      chai.request(app)\n        .post('/api/v1/recipes')\n        .send({\n          id: 10,\n          title: 'mango juice',\n        })\n        .end((err, res) => {\n          should.not.exist(err);\n          res.status.should.equal(400);\n          res.body.status.should.equal('Unsuccessful');\n          done();\n        });\n    });\n  });\n  describe('POST /api/v1/recipes/2/reviews', () => {\n    it('it should return code 201 Succesful', () => {\n      chai.request(app)\n        .post('/api/v1/recipes/:recipeId/reviews')\n        .send({\n          review: 'Love love love this recipe, use it all the time'\n        })\n        .end((err, res) => {\n          should.not.exist(err);\n          res.status.should.equal(201);\n          res.body.status.should.equal('Success');\n          done();\n        });\n    });\n  });\n\n  describe('PUT /api/v1/recipes/5', () => {\n    it('it should return code 201 Succesful', () => {\n      chai.request(app)\n        .put('/api/v1/recipes/:recipeId')\n        .send({\n          details: 'Cut and squeez juice, using juicer, serve chilled'\n        })\n        .end((err, res) => {\n          should.not.exist(err);\n          res.status.should.equal(200);\n          res.body.status.should.equal('Success');\n          res.body.message.should.equal('Updated Recipe')\n          done();\n        });\n    });\n    it('it should return code 404 Recipe Not Found', () => {\n      chai.request(app)\n        .put('/api/v1/recipes/:recipeId')\n        .send({\n          details: 'Cut and squeez juice, using juicer, serve chilled'\n        })\n        .end((err, res) => {\n          should.exist(err);\n          res.status.should.equal(404);\n          res.body.status.should.equal('Unsuccessful');\n          res.body.message.should.equal('Recipe Not Found')\n          done();\n        });\n    });\n  });\n\n  describe('DELETE /api/v1/recipes/1', () => {\n    it('it should return code 200 Succesful', () => {\n      chai.request(app)\n        .delete('/api/v1/recipes/:recipeId')\n        .end((err, res) => {\n          should.not.exist(err);\n          res.status.should.equal(200);\n          res.body.status.should.equal('Success');\n          res.body.message.should.equal('Recipe Deleted')\n          done();\n        });\n    });\n    it('it should return code 404 Recipe Not Found', () => {\n      chai.request(app)\n        .delete('/api/v1/recipes/:recipeId')\n        .end((err, res) => {\n          should.exist(err);\n          res.status.should.equal(404);\n          res.body.status.should.equal('Unsuccessful');\n          res.body.message.should.equal('Recipe Not Found')\n          done();\n        });\n    });\n  });\n})\n"]}