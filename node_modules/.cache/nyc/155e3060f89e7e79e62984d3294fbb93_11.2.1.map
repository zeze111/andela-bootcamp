{"version":3,"sources":["apitests.js"],"names":["use","should","app","require","describe","it","request","get","end","err","res","status","equal","body","be","a","done","post","send","id","title","details","not","exist","message","review","put","delete"],"mappings":"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","file":"apitests.js","sourceRoot":"C:/Users/Osaze/Desktop/andela-bootcamp27/server/tests","sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\n\nchai.use(chaiHttp);\n\nconst should = chai.should;\n\nconst app = require('../routes/index.js');\n\n\ndescribe('HTTP API Testing', () =>{\n  describe('GET /api/v1/recipes', () => {\n    it('it should return code 200 and recipe list', () =>{\n      chai.request(app)\n        .get('/api/v1/recipes')\n        .end((err, res) =>{\n          res.status.should.equal(200);\n          res.body.should.be.a('array');\n          res.body.status.should.equal('Success');\n          done();\n        });\n    });\n  });\n  describe('GET /api/v2/recipes?sort=upvotes&order=des', () =>{\n    it('it should return code 200 and popular recipe list', () =>{\n      chai.request(app)\n        .get('/api/v1/recipes?sort=upvotes&order=des')\n        .end((err, res) =>{\n          res.status.should.equal(200);\n          res.body.should.be.a('array');\n          res.body.status.should.equal('Success');\n          done();\n        });\n    });\n  });\n\n  describe('POST /api/v1/recipes', () =>{\n    it('it should return code 201 Succesful', () =>{\n      chai.request(app)\n        .post('/api/v1/recipes')\n        .send({\n          id: 5,\n          title: 'mango juice',\n          details: 'cut and squeeze juice into a cup'\n        })\n        .end((err, res) =>{\n          should.not.exist(err);\n          res.status.should.equal(201);\n          res.body.status.should.equal('Success');\n          res.body.message.should.equal('Submitted Recipe');\n          done();\n        });\n    });\n    it('it should return code 400 Missing data input', () =>{\n      chai.request(app)\n        .post('/api/v1/recipes')\n        .send({\n          id: 10,\n          title: 'mango juice',\n        })\n        .end((err, res) =>{\n          should.not.exist(err);\n          res.status.should.equal(400);\n          res.body.status.should.equal('Unsuccessful');\n          done();\n        });\n    });\n  });\n  describe('POST /api/v1/recipes/2/reviews', () =>{\n    it('it should return code 201 Succesful', () =>{\n      chai.request(app)\n        .post('/api/v1/recipes')\n        .send({\n          review: 'Love love love this recipe, use it all the time'\n        })\n        .end((err, res) =>{\n          should.not.exist(err);\n          res.status.should.equal(201);\n          res.body.status.should.equal('Success');\n          res.body.should.be.a('array');\n          done();\n        });\n    });\n  });\n\n  describe('PUT /api/v1/recipes/5', () =>{\n    it('it should return code 201 Succesful', () =>{\n      chai.request(app)\n        .put('/api/v1/recipes/5')\n        .send({\n          details: 'Cut and squeez juice, using juicer, serve chilled'\n        })\n        .end((err, res) =>{\n          should.not.exist(err);\n          res.status.should.equal(200);\n          res.body.status.should.equal('Success');\n          res.body.message.should.equal('Updated Recipe');\n          done();\n        });\n    });\n    it('it should return code 404 Recipe Not Found', () =>{\n      chai.request(app)\n        .put('/api/v1/recipes/:recipeId')\n        .send({\n          details: 'Cut and squeez juice, using juicer, serve chilled'\n        })\n        .end((err, res) =>{\n          should.exist(err);\n          res.status.should.equal(404);\n          res.body.status.should.equal('Unsuccessful');\n          res.body.message.should.equal('Recipe Not Found');\n          done();\n        });\n    });\n  });\n\n  describe('DELETE /api/v1/recipes/1', () =>{\n    it('it should return code 200 Succesful', () =>{\n      chai.request(app)\n        .delete('/api/v1/recipes/:recipeId')\n        .end((err, res) =>{\n          should.not.exist(err);\n          res.status.should.equal(200);\n          res.body.status.should.equal('Success');\n          res.body.message.should.equal('Recipe Deleted');\n          done();\n        });\n    });\n    it('it should return code 404 Recipe Not Found', () =>{\n      chai.request(app)\n        .delete('/api/v1/recipes/:recipeId')\n        .end((err, res) =>{\n          should.exist(err);\n          res.status.should.equal(404);\n          res.body.status.should.equal('Unsuccessful');\n          res.body.message.should.equal('Recipe Not Found');\n          done();\n        });\n    });\n  });\n});\n"]}